<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>wm on fzdwx</title>
    <link>https://fzdwx.github.io/tags/wm/</link>
    <description>Recent content in wm on fzdwx</description>
    <image>
      <url>https://fzdwx.github.io/images/party_parrot.gif</url>
      <link>https://fzdwx.github.io/images/party_parrot.gif</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright [fzdwx](https://github.com/fzdwx)   since 2022</copyright>
    <lastBuildDate>Thu, 26 Jan 2023 11:04:48 +0800</lastBuildDate><atom:link href="https://fzdwx.github.io/tags/wm/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wayland下的窗口管理器： Hyprland</title>
      <link>https://fzdwx.github.io/posts/2023-01-26-hyprland/</link>
      <pubDate>Thu, 26 Jan 2023 11:04:48 +0800</pubDate>
      
      <guid>https://fzdwx.github.io/posts/2023-01-26-hyprland/</guid>
      <description>今天简单尝试了一下 &amp;nbsp;Hyprland ,它的功能类似于 &amp;nbsp;DWM + picom 的组合。只是粗略的尝试了一下，发现还是有一些问题:
分屏的时候，扩展屏幕的光标不显示 设置 WLR_NO_HARDWARE_CURSORS=1 即可解决 扩展屏幕不时有一些黑块闪烁 替换安装包为 hyprland-nvidia-git 即可解决 waybar 有一点用的不爽，它的 workspaces 不是每个屏幕都是独立的(DWM 中的 tag 功能) 当然它还是有一些好处的:
不打任何补丁就有很好的可用性 自带了一些动画效果 配置文件热加载(即每次修改就会立即生效) 这一点好评，DWM 是每次修改了配置都要重新 make 但是我还是选择继续使用 DWM，因为它没有什么必须切换的理由，而且有一些我常用的功能在 Hyprland 中没有找到替代的，加上我的 DWM 的配置也趋于稳定了，也新增了可以点击的 status bar（Hyprland 下使用waybar 可以做到这个功能）。
相关代码 安装脚本:
# 安装 hyperland yay -S hyprland-nvidia-git # 安装 waybar yay -S waybar-hyprland-git # 安装 hyprland share yay -S xdg-desktop-portal-hyprland-git # 安装 rofi for wayland yay -S rofi-lbonn-wayland-git # 安装 壁纸切换 git clone https://github.</description>
      <content:encoded><![CDATA[<p>今天简单尝试了一下 &nbsp;<a href="https://hyprland.org/" target="_blank" rel="noopener">Hyprland</a>
,它的功能类似于 &nbsp;<a href="/posts/2022-09-29-dwm">DWM</a>
 + picom 的组合。只是粗略的尝试了一下，发现还是有一些问题:</p>
<ol>
<li>分屏的时候，扩展屏幕的光标不显示
<ul>
<li>设置 <code>WLR_NO_HARDWARE_CURSORS=1</code>  即可解决</li>
</ul>
</li>
<li>扩展屏幕不时有一些黑块闪烁
<ul>
<li>替换安装包为 <code>hyprland-nvidia-git</code>  即可解决</li>
</ul>
</li>
<li>waybar 有一点用的不爽，它的 workspaces 不是每个屏幕都是独立的(DWM 中的 tag 功能)</li>
</ol>
<p>当然它还是有一些好处的:</p>
<ol>
<li>不打任何补丁就有很好的可用性</li>
<li>自带了一些动画效果</li>
<li>配置文件热加载(即每次修改就会立即生效)
<ul>
<li>这一点好评，DWM 是每次修改了配置都要重新 <code>make</code></li>
</ul>
</li>
</ol>
<p>但是我还是选择继续使用 DWM，因为它没有什么必须切换的理由，而且有一些我常用的功能在 Hyprland 中没有找到替代的，加上我的 DWM 的配置也趋于稳定了，也新增了可以点击的 status bar（Hyprland 下使用waybar 可以做到这个功能）。</p>



<details class="details custom-block">
    <summary>
        <span> 
        
            相关代码
        
        </span>
    </summary>
    <p>
        <p>安装脚本:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 安装 hyperland</span>
</span></span><span class="line"><span class="cl">yay -S hyprland-nvidia-git
</span></span><span class="line"><span class="cl"><span class="c1"># 安装 waybar</span>
</span></span><span class="line"><span class="cl">yay -S waybar-hyprland-git
</span></span><span class="line"><span class="cl"><span class="c1"># 安装 hyprland share</span>
</span></span><span class="line"><span class="cl">yay -S xdg-desktop-portal-hyprland-git
</span></span><span class="line"><span class="cl"><span class="c1"># 安装 rofi for wayland</span>
</span></span><span class="line"><span class="cl">yay -S rofi-lbonn-wayland-git
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 安装 壁纸切换</span>
</span></span><span class="line"><span class="cl">git clone https://github.com/Horus645xx/swww
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> swww
</span></span><span class="line"><span class="cl">cargo build --release
</span></span><span class="line"><span class="cl">cp /target/release/swww /usr/bin
</span></span><span class="line"><span class="cl">cp /target/release/swww-daemon /usr/bin
</span></span><span class="line"><span class="cl">swww init 
</span></span><span class="line"><span class="cl">swww img --transition-type left  ~/Pictures/bg/0494e945880511ebb6edd017c2d2eca2.png
</span></span></code></pre></div><p>供参考的启动脚本:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">LIBVA_DRIVER_NAME</span><span class="o">=</span>nvidia
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">XDG_SESSION_TYPE</span><span class="o">=</span>wayland
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">GBM_BACKEND</span><span class="o">=</span>nvidia-drm
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">__GLX_VENDOR_LIBRARY_NAME</span><span class="o">=</span>nvidia
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">WLR_NO_HARDWARE_CURSORS</span><span class="o">=</span><span class="m">1</span> <span class="c1"># fix cursor</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Example IME Support: fcitx5</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">GTK_IM_MODULE</span><span class="o">=</span>fcitx5
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">QT_IM_MODULE</span><span class="o">=</span>fcitx5
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">XMODIFIERS</span><span class="o">=</span>@im<span class="o">=</span>fcitx5
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">SDL_IM_MODULE</span><span class="o">=</span>fcitx5
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">GLFW_IM_MODULE</span><span class="o">=</span>ibus
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">exec</span> Hyprland
</span></span></code></pre></div><p>~/.config/hypr/hyprland.conf:</p>
<pre tabindex="0"><code class="language-conf" data-lang="conf">########################################################################################
AUTOGENERATED HYPR CONFIG.
PLEASE USE THE CONFIG PROVIDED IN THE GIT REPO /examples/hypr.conf AND EDIT IT,
OR EDIT THIS ONE ACCORDING TO THE WIKI INSTRUCTIONS.
########################################################################################

#
# Please note not all available settings / options are set here.
# For a full list, see the wiki
#

# See https://wiki.hyprland.org/Configuring/Monitors/
monitor=,preferred,auto,auto
#monitor=eDP-1-1, 1920x1080@144, 1920x0, 1
#monitor=HDMI-0, 1920x1080@60, 0x0, 1

# See https://wiki.hyprland.org/Configuring/Keywords/ for more

# Execute your favorite apps at launch
# exec-once = waybar &amp; hyprpaper &amp; firefox

exec-once = fcitx5
exec-once = flameshot
exec-once = /opt/clash/cfw
exec-once = waybar
#exec-once = dunst

# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf

#misc {
#    no_vfr = 1
#}
# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    follow_mouse = 1

    touchpad {
        natural_scroll = no
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

general {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    gaps_in = 5
    gaps_out = 20
    border_size = 2
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)

    layout = dwindle
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    rounding = 10
    blur = yes
    blur_size = 3
    blur_passes = 1
    blur_new_optimizations = on

    drop_shadow = yes
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}

animations {
    enabled = yes

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes # you probably want this
}

master {
    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
    new_is_master = true
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = off
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#executing for more
device:epic mouse V1 {
    sensitivity = -0.5
}

# Example windowrule v1
# windowrule = float, ^(kitty)$
# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
#
# 定义 class 带 float 的都初始为 float 启动
windowrulev2 = float,class:^(float)$
windowrulev2 = noborder,class:^(noborder)$

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER
$term = wezterm
$term_float = wezterm start --class float
$rofi = rofi -show window -show-icons

# start term
bind = $mainMod,       Return,       exec, $term
# start float term
bind = $mainMod,   minus,        exec, $term_float
# start launch
bind = ALT,        SPACE,        exec, $rofi

# kill window
bind = $mainMod, Q, killactive,
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle
# super + f 全屏窗口
bind=$mainMod,F,fullscreen,0
# super + space 将窗口切换为浮动
bind=$mainMod,SPACE,togglefloating,active


# 切换聚焦窗口
bind=SUPER,left,movefocus,l
bind=SUPER,right,movefocus,r
bind=SUPER,up,movefocus,u
bind=SUPER,down,movefocus,d

# 将当前窗口移动 可以一直移动
bind=SUPERSHIFT,left,movewindow,l
bind=SUPERSHIFT,right,movewindow,r
bind=SUPERSHIFT,up,movewindow,u
bind=SUPERSHIFT,down,movewindow,d

# 切换工作空间
bind=SUPER,TAB,workspace,previous
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10


# alt+super + 方向键 控制窗口大小
bind=$mainMod,comma,resizeactive,-20 0
bind=$mainMod,period,resizeactive,20 0
bind=ALT_SUPER,up,resizeactive,0 -20
bind=ALT_SUPER,down,resizeactive,0 20

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10


# shift + super + left/right 移动窗口 到下一个或上一个工作区
bind = $mainMod SHIFT,Left,movetoworkspace,e-1
bind = $mainMod SHIFT,right,movetoworkspace,e+1

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
</code></pre>
    </p>
</details>










]]></content:encoded>
    </item>
    
    <item>
      <title>Dwm初体验</title>
      <link>https://fzdwx.github.io/posts/2022-09-29-dwm/</link>
      <pubDate>Thu, 29 Sep 2022 23:42:41 +0800</pubDate>
      
      <guid>https://fzdwx.github.io/posts/2022-09-29-dwm/</guid>
      <description>安装: git clone https://git.suckless.org/dwm cd dwm sudo make clean install 启动 如果已经有了sddm，可以使用sudo systemctl disable sddm.service 来进行关闭，如果到时候不想用了可以用sudo systemctl enable sddm.service来开启sddm。
# 准备配置文件 cp /etc/X11/xinit/xinitrc ~/.xinitrc vim ~/.xinitrc # 添加 exec dwm # 注释 #twm &amp;amp; #xclock -geometry 50x50-1+1 &amp;amp; #xterm -geometry 80x50+494+51 &amp;amp; #xterm -geometry 80x20+494-0 &amp;amp; #exec xterm -geometry 80x66+0+0 -name login 然后重启并调用startx即可。
遇到的问题 直接断网 使用NetworkManager进行连接，可能要用到dhcpcd。
nmcli device wifi list nmcli device wifi connect {{wifi name}} password {{pwd}} 可能会连接失败，你可以试试nmcli connection show 来查看是否存在以前的连接信息，可以用nmcli connection delete {{wifi name}}来删除对应的信息</description>
      <content:encoded><![CDATA[<h2 id="安装">安装:</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">git clone https://git.suckless.org/dwm
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> dwm
</span></span><span class="line"><span class="cl">sudo make clean install
</span></span></code></pre></div><h2 id="启动">启动</h2>
<p>如果已经有了sddm，可以使用<code>sudo systemctl disable sddm.service</code>
来进行关闭，如果到时候不想用了可以用<code>sudo systemctl enable sddm.service</code>来开启sddm。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 准备配置文件</span>
</span></span><span class="line"><span class="cl">cp /etc/X11/xinit/xinitrc ~/.xinitrc
</span></span><span class="line"><span class="cl">vim ~/.xinitrc
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 添加</span>
</span></span><span class="line"><span class="cl"><span class="nb">exec</span> dwm
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 注释</span>
</span></span><span class="line"><span class="cl"><span class="c1">#twm &amp;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#xclock -geometry 50x50-1+1 &amp;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#xterm -geometry 80x50+494+51 &amp;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#xterm -geometry 80x20+494-0 &amp;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#exec xterm -geometry 80x66+0+0 -name login</span>
</span></span></code></pre></div><p>然后重启并调用<code>startx</code>即可。</p>
<h2 id="遇到的问题">遇到的问题</h2>
<h3 id="直接断网">直接断网</h3>
<p>使用NetworkManager进行连接，可能要用到<code>dhcpcd</code>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nmcli device wifi list
</span></span><span class="line"><span class="cl">nmcli device wifi connect <span class="o">{{</span>wifi name<span class="o">}}</span> password <span class="o">{{</span>pwd<span class="o">}}</span>
</span></span></code></pre></div><p>可能会连接失败，你可以试试<code>nmcli connection show</code>
来查看是否存在以前的连接信息，可以用<code>nmcli connection delete {{wifi name}}</code>来删除对应的信息</p>
<h3 id="输入法失效">输入法失效</h3>
<p>添加配置文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vim ~/.pam_environment
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">INPUT_METHOD <span class="nv">DEFAULT</span><span class="o">=</span>fcitx5
</span></span><span class="line"><span class="cl">GTK_IM_MODULE <span class="nv">DEFAULT</span><span class="o">=</span>fcitx5
</span></span><span class="line"><span class="cl">QT_IM_MODULE <span class="nv">DEFAULT</span><span class="o">=</span>fcitx5
</span></span><span class="line"><span class="cl">XMODIFIERS <span class="nv">DEFAULT</span><span class="o">=</span>@im<span class="o">=</span>fcitx5
</span></span></code></pre></div><p>添加启动命令</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vim ~/.xinitrc1
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 在exec dwm之前添加</span>
</span></span><span class="line"><span class="cl"><span class="nb">exec</span> fcitx5 <span class="p">&amp;</span>
</span></span></code></pre></div><h3 id="扩展屏幕无效">扩展屏幕无效</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 可以先查看有哪些屏幕</span>
</span></span><span class="line"><span class="cl">xrandr 
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 将下面的命令加入 ~/.xinitrc1 中，在exec dwm之前添加</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 我有两个，是上下关系，所以用below 其他有 left 以及 right</span>
</span></span><span class="line"><span class="cl">xrandr --output eDP-1-1  --auto --below HDMI-0
</span></span></code></pre></div><h2 id="常用快捷键">常用快捷键</h2>
<p>可以参考我配置： &nbsp;<a href="https://github.com/fzdwx/dwm" target="_blank" rel="noopener">https://github.com/fzdwx/dwm</a>
</p>
<p><code>MOD</code> -&gt; <code>WIN</code></p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>MOD+SHIFT+ENTER</code></td>
<td>新开终端</td>
</tr>
</tbody>
</table>
<h3 id="在本tag内切换聚焦窗口">在本tag内切换聚焦窗口</h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>ALT + tab</code></td>
<td>切换聚焦窗口</td>
</tr>
<tr>
<td><code>MOD + up</code></td>
<td>切换聚焦窗口</td>
</tr>
<tr>
<td><code>MOD + down</code></td>
<td>切换聚焦窗口</td>
</tr>
</tbody>
</table>
<h3 id="跨tag操作">跨tag操作</h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>MOD + left / right</code></td>
<td>切换tag</td>
</tr>
<tr>
<td><code>MOD + SHIGT + left / tight</code></td>
<td>将当前窗口移动到其他tag</td>
</tr>
<tr>
<td><code>MOD + a</code></td>
<td>第一次是显示所有tag，第二次是跳转到聚焦的窗口所在的窗口</td>
</tr>
</tbody>
</table>
<h3 id="窗口操作">窗口操作</h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>MOD + q</code></td>
<td>退出窗口</td>
</tr>
<tr>
<td><code>MOD + h</code></td>
<td>隐藏窗口</td>
</tr>
<tr>
<td><code>MOD + SHIFT + h</code></td>
<td>显示窗口（像一个栈一样。）</td>
</tr>
<tr>
<td><code>MOD + ENTER</code></td>
<td>将当前窗口设置为主窗口</td>
</tr>
<tr>
<td><code>MOD + f</code></td>
<td>将当前窗口全屏</td>
</tr>
<tr>
<td><code>MOD + CTRL + 方向键</code></td>
<td>移动窗口</td>
</tr>
<tr>
<td><code>MOD + ALT + 方向键</code></td>
<td>调整窗口大小</td>
</tr>
<tr>
<td><code>MOD + o</code></td>
<td>只显示当前窗口/显示所有窗口</td>
</tr>
<tr>
<td><code>MOD + t</code></td>
<td>开启/关闭 聚焦目标的浮动模式</td>
</tr>
<tr>
<td><code>MOD + SHIFT + t</code></td>
<td>开启/关闭 全部目标的浮动模式</td>
</tr>
</tbody>
</table>
<p>| <code>MOD + SHIFT + f</code>  | 开启/关闭 状态栏 |</p>
<h3 id="切换屏幕">切换屏幕</h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>MOD + x</code></td>
<td>将鼠标移动到其他屏幕</td>
</tr>
<tr>
<td><code>MOD + SHIFT + X</code></td>
<td>将当前窗口移动到其他屏幕</td>
</tr>
</tbody>
</table>
<h2 id="更新">更新</h2>
<h3 id="click-status-bar">click status bar</h3>
<p>最近跟进了大佬的配置&nbsp;<a href="https://github.com/yaocccc/dwm" target="_blank" rel="noopener">yaocccc</a>
, 可点击的 status bar.</p>
<p>主要原理就是根据预定义的格式解析出<code>signal</code>
,然后调用预定义的脚本文件(&nbsp;<a href="https://github.com/fzdwx/dwm/commit/b30b5bedb1661e70acf6830f924857650831b441#diff-62eebf5eaf0e6a76a21dfed9da6556ee5413ddb49f06013bd83403cc1a485d98" target="_blank" rel="noopener">commit</a>
)</p>
<p>也很容易扩展，可以参考我的&nbsp;<a href="https://github.com/fzdwx/dwm/blob/main/statusbar/packages/fm.sh" target="_blank" rel="noopener">fm</a>
, <code>update</code>是构造要返回的内容,
<code>click</code>就是点击时调用的方法,<code>wezterm start --class float ranger</code>我这一段就是启动 wezterm 并调用 ranger.</p>
<p><figure id="a-/images/11.png" class="align-center">
    <img src="/images/11.png" alt="img.png"  />
    
    <figcaption>
       img.png
    </figcaption>
    
</figure></p>
<h2 id="links">Links</h2>
<ul>
<li>&nbsp;<a href="https://wiki.archlinux.org/title/Dwm_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29" target="_blank" rel="noopener">ArchWiki Dwm</a>
</li>
<li>&nbsp;<a href="https://dwm.suckless.org/patches/" target="_blank" rel="noopener">Dwm patches</a>
</li>
<li>&nbsp;<a href="https://github.com/Katzeee/dwm-patches-chinese/blob/master/dwm-patches-chinese.md" target="_blank" rel="noopener">Dwm patches中文翻译</a>
</li>
<li>&nbsp;<a href="https://yaocc.cc/2022/06/19/linux%E4%B8%9D%E6%BB%91%E7%9A%84%E5%8A%A8%E7%94%BB%E4%BD%93%E9%AA%8C%E2%80%94%E2%80%94picom/" target="_blank" rel="noopener">picom美化</a>
</li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
